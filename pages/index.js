import Head from 'next/head';
import { TableData } from '../components/TableData';
import { useEffect, useState } from 'react';
import getIndicatorByDate from './api/getIndicatorByDate';

export default function Home() {
	const [showButtonBack, setShowButtonBack] = useState(false);
	const [typeIndicator, setTypeIndicator] = useState('');
	const [date, setDate] = useState('');
	const [dataAPI, setDataAPI] = useState(null);

	//Llamada a la API de indicadores
	useEffect(() => {
		async function getData() {
			const res = await fetch(`https://mindicador.cl/api/`);
			const data = await res.json();
			setDataAPI(data);
		}
		getData();
	}, [showButtonBack]);

	// Al dar click a regresar resetea los input y cambia el estado de showButtonback
	const handleResetData = () => {
		setShowButtonBack(false);
		setDate('');
		setTypeIndicator('');
	};
	//LOADER
	if (!dataAPI) {
		return <div className='loader'>Cargando...</div>;
	}

	// Se ejecuta al dar click al botÃ³n de formulario
	const handleSubmit = async e => {
		e.preventDefault();
		if (!typeIndicator || !date) {
			return;
		} else {
			await getIndicatorByDate(typeIndicator, date).then(data =>
				setDataAPI(data)
			);
		}
	};

	return (
		<>
			<Head>
				<title>Currency Advisor</title>
				<meta
					name='description'
					content='Generated by create next app'
				/>
				<meta
					name='viewport'
					content='width=device-width, initial-scale=1'
				/>
				<link
					rel='icon'
					href='/favicon.ico'
				/>
			</Head>

			<main className='main-container'>
				<div className='title-container'>
					<h1 className='title'>Currency Advisor</h1>
					<div className='gift'></div>
				</div>
				<form
					className='input-container'
					onSubmit={handleSubmit}>
					<label
						htmlFor='name-indicator'
						className='label-input'>
						Ingrese el Codigo: <br />
						<input
							type='text'
							className='input-text'
							id='name-indicator'
							value={typeIndicator}
							onChange={event => setTypeIndicator(event.target.value)}
							required
						/>
					</label>
					<label
						htmlFor='date-indicator'
						className='label-input'>
						Ingrese la fecha: <br />
						<input
							className='input-text'
							type='date'
							id='date-indicator'
							value={date}
							onChange={event => setDate(event.target.value)}
							required
						/>
					</label>
					<button
						disabled={!typeIndicator || !date}
						className='btn-form'
						onClick={() => setShowButtonBack(true)}
						type='submit'>
						Consultar
					</button>
				</form>
				{showButtonBack && typeIndicator && date && (
					<button
						className='btn-form back'
						onClick={handleResetData}>
						Regresar
					</button>
				)}
				<TableData data={dataAPI} />
			</main>
		</>
	);
}
